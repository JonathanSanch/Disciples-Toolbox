/// <reference types="bun-types" />
import type { TypeCheck } from '@sinclair/typebox/compiler';
export declare const ERROR_CODE: unique symbol;
export declare const isProduction: boolean;
export type ElysiaErrors = InternalServerError | NotFoundError | ParseError | ValidationError;
export declare class InternalServerError extends Error {
    code: string;
    status: number;
    constructor();
}
export declare class NotFoundError extends Error {
    code: string;
    status: number;
    constructor();
}
export declare class ParseError extends Error {
    code: string;
    status: number;
    constructor();
}
export declare class ValidationError extends Error {
    type: string;
    validator: TypeCheck<any>;
    value: unknown;
    code: string;
    status: number;
    constructor(type: string, validator: TypeCheck<any>, value: unknown);
    get all(): import("@sinclair/typebox/value").ValueError[];
    get model(): any;
    toResponse(headers?: Record<string, any>): Response;
}
