let e="toJSON"in new Headers;export const isNotEmpty=e=>{for(let s in e)return!0;return!1};let s=(e,s)=>{e.delete("Set-Cookie");for(let r=0;r<s.length;r++){let n=s[r].indexOf("=");e.append("Set-Cookie",`${s[r].slice(0,n)}=${s[r].slice(n+1)}`)}return e};export const mapEarlyResponse=(r,n)=>{if(isNotEmpty(n.headers)||200!==n.status||n.redirect)switch(n.redirect&&(n.headers.Location=n.redirect,n.status=302),n.headers["Set-Cookie"]&&Array.isArray(n.headers["Set-Cookie"])&&(n.headers=s(new Headers(n.headers),n.headers["Set-Cookie"])),r?.constructor?.name){case"String":case"Blob":return new Response(r,n);case"Object":case"Array":return Response.json(r,n);case void 0:if(!r)return;return Response.json(r,n);case"Response":let t=Object.assign({},n.headers);if(e)n.headers=r.headers.toJSON();else for(let[e,s]of r.headers.entries())e in n.headers||(n.headers[e]=s);for(let e in t)r.headers.append(e,t[e]);return r.status!==n.status&&(n.status=r.status),r;case"Promise":return r.then(e=>{let s=mapEarlyResponse(e,n);if(void 0!==s)return s});case"Error":return errorToResponse(r,n.headers);case"Function":return r();case"Number":case"Boolean":return new Response(r.toString(),n);default:if(r instanceof Response)return r;let o=JSON.stringify(r);if(123===o.charCodeAt(0))return n.headers["Content-Type"]||(n.headers["Content-Type"]="application/json"),new Response(JSON.stringify(r),n);return new Response(o,n)}else switch(r?.constructor?.name){case"String":case"Blob":return new Response(r);case"Object":case"Array":return new Response(JSON.stringify(r),{headers:{"content-type":"application/json"}});case void 0:if(!r)return new Response("");return new Response(JSON.stringify(r),{headers:{"content-type":"application/json"}});case"Response":return r;case"Promise":return r.then(e=>{let s=mapEarlyResponse(e,n);if(void 0!==s)return s});case"Error":return errorToResponse(r,n.headers);case"Function":return r();case"Number":case"Boolean":return new Response(r.toString());default:if(r instanceof Response)return r;let a=JSON.stringify(r);if(123===a.charCodeAt(0))return new Response(JSON.stringify(r),{headers:{"Content-Type":"application/json"}});return new Response(a)}};export const mapResponse=(r,n)=>{if(isNotEmpty(n.headers)||200!==n.status||n.redirect)switch(n.redirect&&(n.headers.Location=n.redirect,n.status=302),n.headers["Set-Cookie"]&&Array.isArray(n.headers["Set-Cookie"])&&(n.headers=s(new Headers(n.headers),n.headers["Set-Cookie"])),r?.constructor?.name){case"String":case"Blob":return new Response(r,{status:n.status,headers:n.headers});case"Object":case"Array":return Response.json(r,n);case void 0:if(!r)return new Response("",n);return Response.json(r,n);case"Response":let t=Object.assign({},n.headers);if(e)n.headers=r.headers.toJSON();else for(let[e,s]of r.headers.entries())e in n.headers||(n.headers[e]=s);for(let e in t)r.headers.append(e,t[e]);return r;case"Error":return errorToResponse(r,n.headers);case"Promise":return r.then(e=>mapResponse(e,n));case"Function":return r();case"Number":case"Boolean":return new Response(r.toString(),n);default:if(r instanceof Response)return r;let o=JSON.stringify(r);if(123===o.charCodeAt(0))return n.headers["Content-Type"]||(n.headers["Content-Type"]="application/json"),new Response(JSON.stringify(r),n);return new Response(o,n)}else switch(r?.constructor?.name){case"String":case"Blob":return new Response(r);case"Object":case"Array":return new Response(JSON.stringify(r),{headers:{"content-type":"application/json"}});case void 0:if(!r)return new Response("");return new Response(JSON.stringify(r),{headers:{"content-type":"application/json"}});case"Response":return r;case"Error":return errorToResponse(r);case"Promise":return r.then(e=>{let s=mapResponse(e,n);return void 0!==s?s:new Response("")});case"Function":return r();case"Number":case"Boolean":return new Response(r.toString());default:if(r instanceof Response)return r;let a=JSON.stringify(r);if(123===a.charCodeAt(0))return new Response(JSON.stringify(r),{headers:{"Content-Type":"application/json"}});return new Response(a)}};export const mapCompactResponse=e=>{switch(e?.constructor?.name){case"String":case"Blob":return new Response(e);case"Object":case"Array":return new Response(JSON.stringify(e),{headers:{"content-type":"application/json"}});case void 0:if(!e)return new Response("");return new Response(JSON.stringify(e),{headers:{"content-type":"application/json"}});case"Response":return e;case"Error":return errorToResponse(e);case"Promise":return e.then(e=>{let s=mapCompactResponse(e);return void 0!==s?s:new Response("")});case"Function":return e();case"Number":case"Boolean":return new Response(e.toString());default:if(e instanceof Response)return e;let s=JSON.stringify(e);if(123===s.charCodeAt(0))return new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json"}});return new Response(s)}};export const errorToResponse=(e,s)=>new Response(JSON.stringify({name:e?.name,message:e?.message,cause:e?.cause}),{status:500,headers:s});