import{Value as r}from"@sinclair/typebox/value";let e="undefined"!=typeof Bun?Bun.env:"undefined"!=typeof process?process?.env:void 0;export const ERROR_CODE=Symbol("ErrorCode");export const isProduction=(e?.NODE_ENV??e?.ENV)==="production";export class InternalServerError extends Error{code="NOT_FOUND";status=500;constructor(){super("INTERNAL_SERVER_ERROR")}}export class NotFoundError extends Error{code="NOT_FOUND";status=404;constructor(){super("NOT_FOUND")}}export class ParseError extends Error{code="PARSE";status=400;constructor(){super("PARSE")}}export class ValidationError extends Error{type;validator;value;code;status;constructor(e,t,o){let s=isProduction?void 0:t.Errors(o).First(),a=s?.schema.error?"function"==typeof s.schema.error?s.schema.error(e,t,o):s.schema.error:void 0,n=isProduction?a??`Invalid ${e??s?.schema.error??s?.message}`:a??`Invalid ${e}, '${s?.path?.slice(1)||"type"}': ${s?.message}

Expected: `+JSON.stringify(r.Create(t.schema),null,2)+"\n\nFound: "+JSON.stringify(o,null,2);super(n),this.type=e,this.validator=t,this.value=o,this.code="VALIDATION",this.status=400,Object.setPrototypeOf(this,ValidationError.prototype)}get all(){return[...this.validator.Errors(this.value)]}get model(){return r.Create(this.validator.schema)}toResponse(r){return new Response(this.message,{status:400,headers:r})}}